import React, { useState, useEffect } from 'react';
import './PersonalInfoPage.css';
import { useNavigate } from 'react-router-dom';

const sampleList = [
  {
    id: 'M20250701A',
    type: 'Ni√™m m·∫°c mi·ªáng',
    date: '10/07/2025',
    collector: 'Bs. Tr·∫ßn Minh',
    method: 'T·∫°i ph√≤ng kh√°m',
  },
  {
    id: 'M20250701B',
    type: 'M√°u',
    date: '11/07/2025',
    collector: 'Bs. Nguy·ªÖn VƒÉn B',
    method: 'T·∫°i nh√†',
  },
];

const appointmentList = [
  {
    id: 'ORD20250701',
    testType: 'Cha - Con',
    time: '10/07/2025 - 09:00 AM',
    status: 'ƒêang x√©t nghi·ªám',
    payment: {
      fee: '2.000.000ƒë',
      method: 'Chuy·ªÉn kho·∫£n',
      status: 'ƒê√£ thanh to√°n',
      date: '09/07/2025',
    },
    serviceType: 'X√©t nghi·ªám thai nhi',
    serviceCategory: 'D√¢n s·ª±',
    servicePackage: 'L·∫•y nhanh',
    numSamples: 2,
    bookingDate: '2024-06-27',
    appointmentDate: '2024-06-28',
    totalPrice: '1.200.000',
    note: 'T√¥i c·∫ßn k·∫øt qu·∫£ g·∫•p.',
    participants: [
      { id: 1, name: 'Tr·∫ßn Th·ªã B', gender: 'N·ªØ', birthYear: 1985, relation: 'M·∫π nghi v·∫•n', sampleType: 'M√°u', method: 'T·∫°i trung t√¢m' },
      { id: 2, name: 'Tr·∫ßn VƒÉn D', gender: 'Nam', birthYear: 2012, relation: 'Con', sampleType: 'T√≥c', method: 'T·∫°i nh√†' },
    ],
    statusStep: 1, // 0: ƒê√£ ƒë·∫∑t, 1: Ch·ªù l·∫•y m·∫´u, 2: ƒêang x√©t nghi·ªám, 3: ƒê√£ c√≥ k·∫øt qu·∫£
  },
  {
    id: 'ORD20250702',
    testType: 'M·∫π - Con',
    time: '12/07/2025 - 14:00 PM',
    status: 'ƒê√£ ho√†n th√†nh',
    payment: {
      fee: '2.500.000ƒë',
      method: 'Ti·ªÅn m·∫∑t',
      status: 'Ch∆∞a thanh to√°n',
      date: '-',
    },
    serviceType: 'X√©t nghi·ªám cha con',
    serviceCategory: 'Ph√°p l√Ω',
    servicePackage: 'Ti√™u chu·∫©n',
    numSamples: 3,
    bookingDate: '2024-07-01',
    appointmentDate: '2024-07-02',
    totalPrice: '2.500.000',
    note: '',
    participants: [
      { id: 1, name: 'Nguy·ªÖn VƒÉn A', gender: 'Nam', birthYear: 1980, relation: 'Cha', sampleType: 'Ni√™m m·∫°c mi·ªáng', method: 'T·∫°i trung t√¢m' },
      { id: 2, name: 'Nguy·ªÖn VƒÉn B', gender: 'Nam', birthYear: 2010, relation: 'Con', sampleType: 'M√°u', method: 'T·∫°i nh√†' },
      { id: 3, name: 'Nguy·ªÖn Th·ªã C', gender: 'N·ªØ', birthYear: 1982, relation: 'M·∫π', sampleType: 'T√≥c', method: 'T·∫°i nh√†' },
    ],
    statusStep: 3,
  },
];

const resultList = [
  {
    date: '15/07/2025',
    conclusion: '‚úîÔ∏è X√°c nh·∫≠n quan h·ªá cha - con',
    file: 'result-cha-con.pdf',
  },
  {
    date: '16/07/2025',
    conclusion: '‚ùå Kh√¥ng x√°c nh·∫≠n quan h·ªá m·∫π - con',
    file: 'result-me-con.pdf',
  },
];

const paymentList = [
  {
    id: 'ORD20250701',
    fee: '2.000.000ƒë',
    method: 'Chuy·ªÉn kho·∫£n',
    status: 'ƒê√£ thanh to√°n',
    date: '09/07/2025',
  },
  {
    id: 'ORD20250702',
    fee: '2.500.000ƒë',
    method: 'Ti·ªÅn m·∫∑t',
    status: 'Ch∆∞a thanh to√°n',
    date: '-',
  },
];

const PersonalInfoPage = () => {
  const [activeMenuItem, setActiveMenuItem] = useState('basic-info');
  const [toggleStates, setToggleStates] = useState({
    twoFactor: true,
    shareResults: true
  });
  const [selectedAppointment, setSelectedAppointment] = useState(null);
  const [showAppointmentModal, setShowAppointmentModal] = useState(false);
  const [selectedPayment, setSelectedPayment] = useState(null);
  const [showPaymentModal, setShowPaymentModal] = useState(false);
  const navigate = useNavigate();

  useEffect(() => {
    if (showAppointmentModal) {
      document.body.style.overflow = 'hidden';
    } else {
      document.body.style.overflow = '';
    }
    return () => { document.body.style.overflow = ''; };
  }, [showAppointmentModal]);

  const handleMenuItemClick = (menuId) => {
    setActiveMenuItem(menuId);
  };

  const handleEditClick = () => {
    alert('Ch·ª©c nƒÉng ch·ªânh s·ª≠a s·∫Ω ƒë∆∞·ª£c tri·ªÉn khai trong phi√™n b·∫£n ti·∫øp theo!');
  };

  const handleDownloadClick = (file) => {
    alert(`ƒêang t·∫£i xu·ªëng file: ${file || 'PDF k·∫øt qu·∫£ x√©t nghi·ªám'}...`);
  };

  const handleViewClick = (id) => {
    // For appointments, show modal
    const found = appointmentList.find(a => a.id === id);
    if (found) {
      setSelectedAppointment(found);
      setShowAppointmentModal(true);
    } else {
      alert(`Xem chi ti·∫øt cho m√£: ${id}`);
    }
  };

  const handleCloseModal = () => {
    setShowAppointmentModal(false);
    setSelectedAppointment(null);
  };

  const handleChatClick = () => {
    alert('Ch·ª©c nƒÉng chat h·ªó tr·ª£ s·∫Ω ƒë∆∞·ª£c m·ªü ra!');
  };

  const handleToggleSwitch = (toggleName) => {
    setToggleStates(prev => ({
      ...prev,
      [toggleName]: !prev[toggleName]
    }));
  };

  const handleLogout = () => {
    if (window.confirm('B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën ƒëƒÉng xu·∫•t?')) {
      alert('ƒê√£ ƒëƒÉng xu·∫•t th√†nh c√¥ng!');
    }
  };

  const handleViewPayment = (id) => {
    const found = paymentList.find(p => p.id === id);
    if (found) {
      setSelectedPayment(found);
      setShowPaymentModal(true);
    }
  };
  const handleClosePaymentModal = () => {
    setShowPaymentModal(false);
    setSelectedPayment(null);
  };

  // Render content based on active menu item
  const renderContent = () => {
    switch (activeMenuItem) {
      case 'basic-info':
        return (
          <div className="card">
            <div className="card-header">
              <h4 className="card-title">
                <span className="card-title-icon">üë§</span>
                Th√¥ng tin c∆° b·∫£n
              </h4>
              <button className="card-edit-btn" onClick={handleEditClick}>Ch·ªânh s·ª≠a</button>
            </div>
            <div className="card-body">
              <div className="info-row">
                <span className="info-label">H·ªç v√† t√™n:</span>
                <span className="info-value">Nguy·ªÖn VƒÉn An</span>
              </div>
              <div className="info-row">
                <span className="info-label">Gi·ªõi t√≠nh:</span>
                <span className="info-value">Nam</span>
              </div>
              <div className="info-row">
                <span className="info-label">Ng√†y sinh:</span>
                <span className="info-value">15/03/1985</span>
              </div>
              <div className="info-row">
                <span className="info-label">CMND/CCCD:</span>
                <span className="info-value">123456789</span>
              </div>
              <div className="info-row">
                <span className="info-label">Qu·ªëc t·ªãch:</span>
                <span className="info-value">Vi·ªát Nam</span>
              </div>
              <div className="info-row">
                <span className="info-label">Ngh·ªÅ nghi·ªáp:</span>
                <span className="info-value">K·ªπ s∆∞</span>
                </div>
            </div>
        </div>
        );

      case 'contact':
        return (
          <div className="card">
            <div className="card-header">
              <h4 className="card-title">
                <span className="card-title-icon">üìû</span>
                        Th√¥ng tin li√™n h·ªá
                    </h4>
              <button className="card-edit-btn" onClick={handleEditClick}>Ch·ªânh s·ª≠a</button>
                </div>
            <div className="card-body">
              <div className="info-row">
                <span className="info-label">S·ªë ƒëi·ªán tho·∫°i:</span>
                <span className="info-value">0987 654 321</span>
                    </div>
              <div className="info-row">
                <span className="info-label">Email:</span>
                <span className="info-value">nguyenvana@email.com</span>
                    </div>
              <div className="info-row">
                <span className="info-label">ƒê·ªãa ch·ªâ th∆∞·ªùng tr√∫:</span>
                <span className="info-value">123 L√™ L·ª£i, Qu·∫≠n 1, TP.HCM</span>
                    </div>
              <div className="info-row">
                <span className="info-label">ƒê·ªãa ch·ªâ nh·∫≠n k·∫øt qu·∫£:</span>
                <span className="info-value">456 Nguy·ªÖn Hu·ªá, Qu·∫≠n 1, TP.HCM</span>
                    </div>
                </div>
            </div>
        );

      case 'samples':
        return (
          <div className="card">
            <div className="card-header">
              <h4 className="card-title">
                <span className="card-title-icon">üß™</span>
                Danh s√°ch m·∫´u x√©t nghi·ªám
                    </h4>
                </div>
            <div className="card-body">
              <div className="table-responsive">
                <table className="info-table">
                  <thead>
                    <tr>
                      <th>M√£ m·∫´u</th>
                      <th>Lo·∫°i m·∫´u</th>
                      <th>Ng√†y thu m·∫´u</th>
                      <th>Ng∆∞·ªùi thu m·∫´u</th>
                      <th>H√¨nh th·ª©c</th>
                      <th>H√†nh ƒë·ªông</th>
                    </tr>
                  </thead>
                  <tbody>
                    {sampleList.map((s) => (
                      <tr key={s.id}>
                        <td>{s.id}</td>
                        <td>{s.type}</td>
                        <td>{s.date}</td>
                        <td>{s.collector}</td>
                        <td>{s.method}</td>
                        <td>
                          <button className="download-btn" onClick={() => handleViewClick(s.id)}>Xem</button>
                        </td>
                      </tr>
                    ))}
                  </tbody>
                </table>
                    </div>
                </div>
            </div>
        );

      case 'appointments':
        return (
          <div className="card">
            <div className="card-header">
              <h4 className="card-title">
                <span className="card-title-icon">üìÖ</span>
                Danh s√°ch l·ªãch h·∫πn & ƒë∆°n h√†ng
                    </h4>
                </div>
            <div className="card-body">
              <div className="table-responsive">
                <table className="info-table">
                  <thead>
                    <tr>
                      <th>M√£ ƒë∆°n h√†ng</th>
                      <th>Lo·∫°i x√©t nghi·ªám</th>
                      <th>Th·ªùi gian h·∫πn</th>
                      <th>T√¨nh tr·∫°ng</th>
                      <th>H√†nh ƒë·ªông</th>
                    </tr>
                  </thead>
                  <tbody>
                    {appointmentList.map((a) => (
                      <tr key={a.id}>
                        <td>{a.id}</td>
                        <td>{a.testType}</td>
                        <td>{a.time}</td>
                        <td>
                          <span className={
                            a.status === 'ƒê√£ ho√†n th√†nh' ? 'status-badge status-success' : 'status-badge status-info'
                          }>{a.status}</span>
                        </td>
                        <td>
                          <button className="download-btn" onClick={() => handleViewClick(a.id)}>Xem</button>
                        </td>
                      </tr>
                    ))}
                  </tbody>
                </table>
              </div>
              {/* Modal chi ti·∫øt ƒë∆°n h√†ng */}
              {showAppointmentModal && selectedAppointment && (
                <div className="modal-overlay" onClick={handleCloseModal}>
                  <div className="modal-content" onClick={e => e.stopPropagation()} style={{maxWidth: 700}}>
                    <h2 style={{textAlign: 'center', color: 'var(--primary-blue)', marginBottom: 12}}>Chi ti·∫øt ƒë∆°n #{selectedAppointment.id.replace(/\D/g, '')}</h2>
                    <hr />
                    <div style={{marginBottom: 18}}>
                      <div><b>M√£ ƒê∆°n:</b> {selectedAppointment.id}</div>
                      <div><b>M√£ KH:</b> 102</div>
                      <div><b>D·ªãch v·ª•:</b> {selectedAppointment.serviceType}</div>
                      <div><b>Lo·∫°i d·ªãch v·ª•:</b> {selectedAppointment.serviceCategory}</div>
                      <div><b>G√≥i d·ªãch v·ª•:</b> {selectedAppointment.servicePackage}</div>
                      <div><b>S·ªë m·∫´u:</b> {selectedAppointment.numSamples}</div>
                      <div><b>Ng√†y ƒë·∫∑t:</b> {selectedAppointment.bookingDate}</div>
                      <div><b>Ng√†y h·∫πn:</b> {selectedAppointment.appointmentDate}</div>
                      <div><b>T·ªïng ti·ªÅn:</b> {selectedAppointment.totalPrice}</div>
                      <div><b>Tr·∫°ng th√°i:</b> {selectedAppointment.status}</div>
                      <div><b>Ghi ch√∫:</b> {selectedAppointment.note || 'Kh√¥ng c√≥.'}</div>
                    </div>
                    {/* Thanh tr·∫°ng th√°i ngang */}
                    <div className="customer-progress-bar-wrapper">
                      <div className="customer-progress-bar">
                        {['ƒê√£ ƒë·∫∑t', 'Ch·ªù l·∫•y m·∫´u', 'ƒêang x√©t nghi·ªám', 'ƒê√£ c√≥ k·∫øt qu·∫£'].map((label, idx) => (
                          <div key={label} className="customer-progress-bar-step">
                            <div className="customer-progress-bar-circle"
                              style={{
                                background: idx <= selectedAppointment.statusStep ? 'var(--primary-blue)' : '#eaf0fa',
                                color: idx <= selectedAppointment.statusStep ? '#fff' : '#888',
                                border: idx === selectedAppointment.statusStep ? '2px solid var(--primary-green)' : '2px solid #eaf0fa',
                              }}
                            >{idx+1}</div>
                            {idx < 3 && (
                              <div className="customer-progress-bar-line"
                                style={{background: idx < selectedAppointment.statusStep ? 'var(--primary-blue)' : '#eaf0fa'}}></div>
                            )}
                            <div className="customer-progress-bar-label" style={{color: idx <= selectedAppointment.statusStep ? 'var(--primary-blue)' : '#888'}}>{label}</div>
                          </div>
                        ))}
                      </div>
                    </div>
                    {/* B·∫£ng ng∆∞·ªùi tham gia */}
                    <div style={{marginTop: 18}}>
                      <b>Th√¥ng tin ng∆∞·ªùi tham gia:</b>
                      <div className="table-responsive" style={{marginTop: 8}}>
                        <table className="info-table">
                          <thead>
                            <tr>
                              <th>ID</th>
                              <th>H·ªå T√äN</th>
                              <th>GI·ªöI T√çNH</th>
                              <th>NƒÇM SINH</th>
                              <th>QUAN H·ªÜ</th>
                              <th>LO·∫†I M·∫™U</th>
                              <th>PH∆Ø∆†NG PH√ÅP THU M·∫™U</th>
                            </tr>
                          </thead>
                          <tbody>
                            {selectedAppointment.participants.map((p) => (
                              <tr key={p.id}>
                                <td>{p.id}</td>
                                <td>{p.name}</td>
                                <td>{p.gender}</td>
                                <td>{p.birthYear}</td>
                                <td>{p.relation}</td>
                                <td>{p.sampleType}</td>
                                <td>{p.method}</td>
                              </tr>
                            ))}
                          </tbody>
                        </table>
                      </div>
                    </div>
                    <div style={{textAlign: 'center', marginTop: 24}}>
                      <button className="download-btn" style={{minWidth: 120}} onClick={handleCloseModal}>ƒê√≥ng</button>
                        </div>
                    </div>
                </div>
              )}
            </div>
          </div>
        );

      case 'results':
        return (
          <div className="card">
            <div className="card-header">
              <h4 className="card-title">
                <span className="card-title-icon">üìÑ</span>
                Danh s√°ch k·∫øt qu·∫£ x√©t nghi·ªám
                    </h4>
                </div>
            <div className="card-body">
              <div className="table-responsive">
                <table className="info-table">
                  <thead>
                    <tr>
                      <th>Ng√†y tr·∫£ k·∫øt qu·∫£</th>
                      <th>K·∫øt lu·∫≠n</th>
                      <th>File k·∫øt qu·∫£</th>
                      <th>H√†nh ƒë·ªông</th>
                    </tr>
                  </thead>
                  <tbody>
                    {resultList.map((r, idx) => (
                      <tr key={idx}>
                        <td>{r.date}</td>
                        <td>{r.conclusion}</td>
                        <td>{r.file}</td>
                        <td>
                          <button className="download-btn" onClick={() => handleDownloadClick(r.file)}>T·∫£i v·ªÅ</button>
                        </td>
                      </tr>
                    ))}
                  </tbody>
                </table>
                    </div>
                </div>
            </div>
        );

      case 'payment':
        return (
          <div className="card">
            <div className="card-header">
              <h4 className="card-title">
                <span className="card-title-icon">üí≥</span>
                Danh s√°ch thanh to√°n
                    </h4>
                </div>
            <div className="card-body">
              <div className="table-responsive">
                <table className="info-table">
                  <thead>
                    <tr>
                      <th>M√£ ƒë∆°n h√†ng</th>
                      <th>Ph√≠ x√©t nghi·ªám</th>
                      <th>H√¨nh th·ª©c</th>
                      <th>T√¨nh tr·∫°ng</th>
                      <th>Ng√†y thanh to√°n</th>
                      <th>H√†nh ƒë·ªông</th>
                    </tr>
                  </thead>
                  <tbody>
                    {paymentList.map((p) => (
                      <tr key={p.id}>
                        <td>{p.id}</td>
                        <td>{p.fee}</td>
                        <td>{p.method}</td>
                        <td>
                          <span className={
                            p.status === 'ƒê√£ thanh to√°n' ? 'status-badge status-success' : 'status-badge status-info'
                          }>{p.status}</span>
                        </td>
                        <td>{p.date}</td>
                        <td>
                          <button className="download-btn" onClick={() => handleViewPayment(p.id)}>Xem</button>
                        </td>
                      </tr>
                    ))}
                  </tbody>
                </table>
                    </div>
              {/* Modal chi ti·∫øt thanh to√°n */}
              {showPaymentModal && selectedPayment && (
                <div className="modal-overlay" onClick={handleClosePaymentModal}>
                  <div className="modal-content" onClick={e => e.stopPropagation()}>
                    <h3>Chi ti·∫øt thanh to√°n</h3>
                    <div className="info-row"><span className="info-label">M√£ ƒë∆°n h√†ng:</span><span className="info-value">{selectedPayment.id}</span></div>
                    <div className="info-row"><span className="info-label">Ph√≠ x√©t nghi·ªám:</span><span className="info-value">{selectedPayment.fee}</span></div>
                    <div className="info-row"><span className="info-label">H√¨nh th·ª©c thanh to√°n:</span><span className="info-value">{selectedPayment.method}</span></div>
                    <div className="info-row"><span className="info-label">T√¨nh tr·∫°ng:</span><span className="info-value">{selectedPayment.status}</span></div>
                    <div className="info-row"><span className="info-label">Ng√†y thanh to√°n:</span><span className="info-value">{selectedPayment.date}</span></div>
                    <div style={{textAlign: 'right', marginTop: 20}}>
                      {selectedPayment.status === 'Ch∆∞a thanh to√°n' && (
                        <button className="download-btn" style={{background: 'var(--primary-green)', marginRight: 8}}
                          onClick={() => {
                            setShowPaymentModal(false);
                            const bookingData = appointmentList.find(a => a.id === selectedPayment.id) || { bookingID: selectedPayment.id };
                            navigate('/booking-payment', { state: { bookingData } });
                          }}
                        >Thanh to√°n ngay</button>
                      )}
                      <button className="download-btn" onClick={handleClosePaymentModal}>ƒê√≥ng</button>
                    </div>
                    </div>
                </div>
              )}
            </div>
          </div>
        );

      case 'security':
        return (
          <div className="card">
            <div className="card-header">
              <h4 className="card-title">
                <span className="card-title-icon">üîê</span>
                        B·∫£o m·∫≠t & quy·ªÅn ri√™ng t∆∞
                    </h4>
                </div>
            <div className="card-body">
              <div className="security-item">
                <span className="security-icon">‚úÖ</span>
                <span className="security-text">ƒê√£ b·∫≠t x√°c th·ª±c hai b∆∞·ªõc (2FA)</span>
                <div 
                  className={`toggle-switch ${toggleStates.twoFactor ? 'active' : ''}`}
                  onClick={() => handleToggleSwitch('twoFactor')}
                ></div>
                    </div>
              <div className="security-item">
                <span className="security-icon">üîí</span>
                <span className="security-text">Thay ƒë·ªïi m·∫≠t kh·∫©u</span>
                <button className="card-edit-btn" onClick={handleEditClick}>Thay ƒë·ªïi</button>
                    </div>
              <div className="security-item">
                <span className="security-icon">üßæ</span>
                <span className="security-text">Cho ph√©p chia s·∫ª k·∫øt qu·∫£ v·ªõi ng∆∞·ªùi kh√°c</span>
                <div 
                  className={`toggle-switch ${toggleStates.shareResults ? 'active' : ''}`}
                  onClick={() => handleToggleSwitch('shareResults')}
                ></div>
                    </div>
                </div>
            </div>
        );

      case 'notes':
        return (
          <div className="card">
            <div className="card-header">
              <h4 className="card-title">
                <span className="card-title-icon">üìù</span>
                        Y√™u c·∫ßu ƒë·∫∑c bi·ªát / Ghi ch√∫
                    </h4>
              <button className="card-edit-btn" onClick={handleEditClick}>Ch·ªânh s·ª≠a</button>
            </div>
            <div className="card-body">
              <div className="info-row">
                <span className="info-label">Ghi ch√∫ c·ªßa kh√°ch h√†ng:</span>
                <span className="info-value">"Vui l√≤ng kh√¥ng g·ªçi ƒëi·ªán v√†o gi·ªù l√†m vi·ªác"</span>
                </div>
              <div className="info-row">
                <span className="info-label">Y√™u c·∫ßu h·ªó tr·ª£ g·∫ßn nh·∫•t:</span>
                <span className="info-value">"T√¥i mu·ªën nh·∫≠n k·∫øt qu·∫£ qua Zalo"</span>
                    </div>
              <div style={{ marginTop: '15px' }}>
                <textarea className="notes-textarea" placeholder="Th√™m ghi ch√∫ m·ªõi..."></textarea>
                    </div>
                    </div>
                </div>
        );

      default:
        return (
          <div className="card">
            <div className="card-header">
              <h4 className="card-title">
                <span className="card-title-icon">‚ÑπÔ∏è</span>
                Ch√†o m·ª´ng
              </h4>
            </div>
            <div className="card-body">
              <p>Vui l√≤ng ch·ªçn m·ªôt m·ª•c t·ª´ menu b√™n tr√°i ƒë·ªÉ xem th√¥ng tin chi ti·∫øt.</p>
            </div>
          </div>
        );
    }
  };

  return (
    <div className="dashboard">
      {/* Sidebar */}
      <div className="sidebar">
        <div className="profile-summary">
          <button className="edit-btn" onClick={handleEditClick}>‚úèÔ∏è Ch·ªânh s·ª≠a</button>
          <div className="avatar">NVA</div>
          <div className="profile-name">Nguy·ªÖn VƒÉn An</div>
          <div className="profile-info">
            <div>Nam ‚Ä¢ 15/03/1985</div>
            <div>CMND: 123456789</div>
        </div>
    </div>

        <ul className="menu">
          <li>
            <a 
              href="#" 
              className={activeMenuItem === 'basic-info' ? 'active' : ''}
              onClick={(e) => {
                e.preventDefault();
                handleMenuItemClick('basic-info');
              }}
            >
              <span className="menu-icon">üìÑ</span> Th√¥ng tin c∆° b·∫£n
            </a>
          </li>
          <li>
            <a 
              href="#" 
              className={activeMenuItem === 'contact' ? 'active' : ''}
              onClick={(e) => {
                e.preventDefault();
                handleMenuItemClick('contact');
              }}
            >
              <span className="menu-icon">üìû</span> Th√¥ng tin li√™n h·ªá
            </a>
          </li>
          <li>
            <a 
              href="#" 
              className={activeMenuItem === 'samples' ? 'active' : ''}
              onClick={(e) => {
                e.preventDefault();
                handleMenuItemClick('samples');
              }}
            >
              <span className="menu-icon">üß™</span> M·∫´u x√©t nghi·ªám
            </a>
          </li>
          <li>
            <a 
              href="#" 
              className={activeMenuItem === 'appointments' ? 'active' : ''}
              onClick={(e) => {
                e.preventDefault();
                handleMenuItemClick('appointments');
              }}
            >
              <span className="menu-icon">üìÖ</span> L·ªãch h·∫πn & ƒë∆°n h√†ng
            </a>
          </li>
          <li>
            <a 
              href="#" 
              className={activeMenuItem === 'payment' ? 'active' : ''}
              onClick={(e) => {
                e.preventDefault();
                handleMenuItemClick('payment');
              }}
            >
              <span className="menu-icon">üí≥</span> Thanh to√°n
            </a>
          </li>
          <li>
            <a 
              href="#" 
              className={activeMenuItem === 'results' ? 'active' : ''}
              onClick={(e) => {
                e.preventDefault();
                handleMenuItemClick('results');
              }}
            >
              <span className="menu-icon">üìÑ</span> K·∫øt qu·∫£ x√©t nghi·ªám
            </a>
          </li>
          <li>
            <a 
              href="#" 
              className={activeMenuItem === 'security' ? 'active' : ''}
              onClick={(e) => {
                e.preventDefault();
                handleMenuItemClick('security');
              }}
            >
              <span className="menu-icon">üîê</span> B·∫£o m·∫≠t
            </a>
          </li>
          <li>
            <a 
              href="#" 
              className={activeMenuItem === 'notes' ? 'active' : ''}
              onClick={(e) => {
                    e.preventDefault();
                handleMenuItemClick('notes');
              }}
            >
              <span className="menu-icon">üìù</span> Ghi ch√∫
            </a>
          </li>
          <li>
            <a 
              href="#" 
              className="logout"
              onClick={(e) => {
                e.preventDefault();
                handleLogout();
              }}
            >
              <span className="menu-icon">üîö</span> ƒêƒÉng xu·∫•t
            </a>
          </li>
        </ul>
      </div>

      {/* Main Content */}
      <div className="main-content">
        <div className="main-content-scrollable">
          <div className="dashboard-content">
            {renderContent()}
          </div>
        </div>
      </div>
    </div>
  );
};

export default PersonalInfoPage;